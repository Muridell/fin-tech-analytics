----------------------------------------------Table by Table Analytics

---------------------------------------------CHECKINGS-----------

SELECT  COUNT(DISTINCT CUS_NUM) FROM CUSTOMER
WHERE DATE_OPEN <= '30-SEP-2021'; ------- DISTINCT: 4784110

SELECT COUNT(CUS_NUM) FROM CUSTOMER
WHERE DATE_OPEN <= '30-SEP-2021';  ----4879444

SELECT COUNT(CUS_NUM) FROM (SELECT CUS_NUM FROM MAP_ACCT
INTERSECT
SELECT CUS_NUM FROM CUSTOMER
WHERE DATE_OPEN <= '30-SEP-2021'); -----4633407

SELECT COUNT(CUS_NUM) FROM
(SELECT DISTINCT CUS_NUM from MAP_ACCT
INTERSECT
SELECT DISTINCT CUS_NUM  FROM CUSTOMER
WHERE DATE_OPEN <= '30-SEP-2021'); ----- 4633407

SELECT COUNT(DISTINCT MAP_ACC_NO)  FROM MAP_ACCT; ----5146343
 
SELECT COUNT( MAP_ACC_NO)  FROM MAP_ACCT; -----5146458

SELECT COUNT(DISTINCT CUS_NUM) FROM ACCOUNT
WHERE DATE_OPEN <= '30-SEP-2021' ; ------ 4729142

SELECT COUNT(CUS_NUM) FROM ACCOUNT
WHERE DATE_OPEN <= '30-SEP-2021' ; ----5501219

---5135274
SELECT COUNT(DISTINCT MAP_ACC_NO) FROM 
(SELECT M.BRA_CODE, M.CUS_NUM, M.CUR_CODE, M.LED_CODE, M.SUB_ACCT_CODE, M.MAP_ACC_NO, ACC.DATE_OPEN FROM MAP_ACCT M
JOIN ACCOUNT ACC
ON M.BRA_CODE = ACC.BRA_CODE AND M.CUS_NUM = ACC.CUS_NUM AND M.CUR_CODE = ACC.CUR_CODE AND M.LED_CODE = ACC.LED_CODE AND M.SUB_ACCT_CODE = ACC.SUB_ACCT_CODE)
WHERE DATE_OPEN <= '30-SEP-2021'; ---5135274

SELECT COUNT(MAP_ACC_NO) FROM 
(SELECT M.BRA_CODE, M.CUS_NUM, M.CUR_CODE, M.LED_CODE, M.SUB_ACCT_CODE, M.MAP_ACC_NO, ACC.DATE_OPEN FROM MAP_ACCT M
JOIN ACCOUNT ACC
ON M.BRA_CODE = ACC.BRA_CODE AND M.CUS_NUM = ACC.CUS_NUM AND M.CUR_CODE = ACC.CUR_CODE AND M.LED_CODE = ACC.LED_CODE AND M.SUB_ACCT_CODE = ACC.SUB_ACCT_CODE)
WHERE DATE_OPEN >= '01-JAN-2020' AND DATE_OPEN <= '30-DEC-2020'; ------689383


SELECT COUNT(MAP_ACC_NO) FROM 
(SELECT M.BRA_CODE, M.CUS_NUM, M.CUR_CODE, M.LED_CODE, M.SUB_ACCT_CODE, M.MAP_ACC_NO, ACC.DATE_OPEN FROM MAP_ACCT M
JOIN ACCOUNT ACC
ON M.BRA_CODE = ACC.BRA_CODE AND M.CUS_NUM = ACC.CUS_NUM AND M.CUR_CODE = ACC.CUR_CODE AND M.LED_CODE = ACC.LED_CODE AND M.SUB_ACCT_CODE = ACC.SUB_ACCT_CODE)
WHERE DATE_OPEN >= '01-JAN-2021' AND DATE_OPEN <= '30-JUN-2021'; ------232441


SELECT TO_CHAR(DATE_OPEN, 'YYYYMM'), COUNT(MAP_ACC_NO) FROM 
(SELECT M.BRA_CODE, M.CUS_NUM, M.CUR_CODE, M.LED_CODE, M.SUB_ACCT_CODE, M.MAP_ACC_NO, ACC.DATE_OPEN FROM MAP_ACCT M
JOIN ACCOUNT ACC
ON M.BRA_CODE = ACC.BRA_CODE AND M.CUS_NUM = ACC.CUS_NUM AND M.CUR_CODE = ACC.CUR_CODE AND M.LED_CODE = ACC.LED_CODE AND M.SUB_ACCT_CODE = ACC.SUB_ACCT_CODE)
WHERE DATE_OPEN >= '01-JAN-2021' AND DATE_OPEN <= '30-SEP-2021'
GROUP BY TO_CHAR(DATE_OPEN, 'YYYYMM'); 



-----DISTINCT CUSTOMER NATIONALITY = 91 NATION
SELECT to_char(date_open, 'yyyymm'), count(distinct cus_num) FROM CUSTOMER
where date_open >= '01-jan-2020'
group by to_char(date_open, 'yyyymm')
order by count(cus_num) desc;


---CUSTOMER TABLE INTERPRETATION

-------INTERPRETING CUSTOMER TABLE V1

SELECT B.DES_ENG BRANCH_CODE, ADDR.NAME_LINE1 CUSTOMER_NAME, C.CUS_NUM CUSTOMER_NUMBER, C.CHE_DIG, 
/*C.LAN_IND*/ CASE WHEN C.LAN_IND = 1 THEN 'REFERENCE LANGUAGE'
WHEN C.LAN_IND = 2 THEN 'NATIONAL LANGUAGE' END LANGUAGE, TITLE.DES_ENG TITLE, C.DATE_OPEN, IS_RESI.DES_ENG IS_RESIDENT, NAT.DES_ENG NATIONALITY,
C.SOC_SEC_NUM, ECO_SEC.DES_ENG ECONOMIC_SECTOR, CUS_CLASS.DES_ENG COMM_CUSTOMER_CLASS, DEPTYPE.DES_ENG TYPE_OF_DEPOSITOR, /*C.PRIM_ACCT, C.PASSWORD,*/
C.AUT_AMT, AUT_LVL.DES_ENG AUTHORIZATION_LEVEL,
C.NUM_OF_CARD_ISS NO_OF_CARD_ISSUED, 
/*C.FAC_FLAG*/ CASE WHEN C.FAC_FLAG = 0 THEN 'NO FACILITY'
WHEN C.FAC_FLAG = 1 THEN 'FACILITY' END HAS_FACILITY,
/*C.BLA_REF*/CASE WHEN C.BLA_REF IS NULL THEN 'NOT BLACKLISTED'
ELSE  'BLACKLISTED' END IS_BLACKLISTED,
C.TELL_ID, C.DEL_DATE, C.BIR_DATE, C.NAT_NUM, C.ID_TYPE, C.ID_EXPIRY_DATE, C.OLD_CUS_NUM, 
/*DIARY_FLAG*/ CASE WHEN C.DIARY_FLAG = 0 THEN 'DIARY DOES NOT EXIST'
WHEN C.DIARY_FLAG = 1 THEN 'DIARY EXISTS' END HAS_DIARY,
/*STO_PAY_IND*/ CASE WHEN C.STO_PAY_IND = 0 THEN 'NO STOP PAYMENT/RETURNED CHECKS'
WHEN C.STO_PAY_IND = 1 THEN 'STOP PAYMENT/RETURNED CHECKS' END STOP_PAY_INDICATOR,
C.NUM_OF_CHE_BOOK, CHE_BOOK_TYP.DES_ENG CHECK_BOOK_TYP, C.LAS_CHE_BOOK_SNUM, C.BIRTH_PLACE, COU_OF_RESI.DES_ENG COUNTRY_OF_RESIDENCE, STATE.DES_ENG STATE, PROVINCE.DES_ENG PROVINCE,
DISTRICT.DES_ENG DISTRICT, C.TOWN TOWN, C.REG_NUM, C.MOTH_NAME MOTHER_NAME, C.CUST_MGR CUSTOMER_MANAGER, C.PRE_CUST_MGR PREVIOUS_CUSTOMER_MANAGER, 
C.DATE_MGR_ALLO DATE_OF_MANAGER_ALLOCATION, C.CUS_AUTH_LIM, C.CUS_USED_LIM, C.BBAN_SEQ_NUM, C.LAS_TRA_DATE, C.UPD_TIME, 
C.DCU_FLAG, C.INFORMING_DATE, C.CUS_SEGMENT, C.BIRTH_COU, C.COU_OF_REGI
FROM CUSTOMER C
LEFT JOIN BRANCH B ON  C.BRA_CODE = B.BRA_CODE
LEFT JOIN ADDRESS ADDR ON ADDR.BRA_CODE = C.BRA_CODE AND  ADDR.CUS_NUM = C.CUS_NUM
LEFT JOIN (select * from banksys.text_tab where tab_id = 90) TITLE ON C.TIT_CODE = TITLE.TAB_ENT 
LEFT JOIN (select * from banksys.text_tab where tab_id = 40) IS_RESI ON C.RESI_CODE = IS_RESI.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 10) NAT ON C.NATIONALITY = NAT.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 45) ECO_SEC ON C.ECO_SEC = ECO_SEC.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 55) CUS_CLASS ON C.CUS_CLASS = CUS_CLASS.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 130) DEPTYPE ON C.CUS_CLASS = DEPTYPE.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 1) AUT_LVL ON C.AUT_LVL = AUT_LVL.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 205) CHE_BOOK_TYP ON C.CHE_BOOK_TYP_CODE = CHE_BOOK_TYP.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 10) COU_OF_RESI ON C.COU_OF_RESI = COU_OF_RESI.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 813) STATE ON C.STATE = STATE.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 814) PROVINCE ON C.PROVINCE = PROVINCE.TAB_ENT
LEFT JOIN (select * from banksys.text_tab where tab_id = 815) DISTRICT ON C.DISTRICT = DISTRICT.TAB_ENT
;


-------INTERPRETING CUSTOMER TABLE V2

SELECT C.BRA_CODE BRANCH_NAME, 
            C.CUS_NUM CUSTOMER_NUMBER, 
            ADDR.CUR_CODE, 
           ADDR.LED_CODE, 
           ADDR.SUB_ACCT_CODE,
           C.CHE_DIG,
           (select DES_ENG from text_tab B where tab_id = 90  and   C.TIT_CODE =b.tab_ent ) TITLE ,
           ADDR.NAME_LINE1 CUSTOMER_NAME, 
/*C.LAN_IND*/ CASE WHEN C.LAN_IND = 1 THEN 'REFERENCE LANGUAGE'
                        WHEN C.LAN_IND = 2 THEN 'NATIONAL LANGUAGE' END LANGUAGE,            
           C.DATE_OPEN, 
           (select des_eng from text_tab b where   tab_id=40 and   C.RESI_CODE =b.tab_ent ) IS_RESIDENT ,
           (select des_eng from text_tab b where   tab_id=10 and   C.NATIONALITY =b.tab_ent ) NATIONALITY ,
           C.SOC_SEC_NUM, 
           (select des_eng from text_tab b where   tab_id=45 and   C.ECO_SEC =b.tab_ent ) ECO_SEC ,
           (select des_eng from text_tab b where   tab_id=55 and   C.CUS_CLASS =b.tab_ent ) CUS_CLASS ,
          (select des_eng from text_tab b where   tab_id=130 and   C.TYPE_OF_DEP =b.tab_ent ) TYPE_OF_DEP ,           
          C.AUT_AMT, 
          (select des_eng from text_tab b where   tab_id=1 and   C.AUT_LVL =b.tab_ent ) AUT_LVL ,
          C.NUM_OF_CARD_ISS NO_OF_CARD_ISSUED, 
/*C.FAC_FLAG*/ CASE WHEN C.FAC_FLAG = 0 THEN 'NO FACILITY'  WHEN C.FAC_FLAG = 1 THEN 'FACILITY' END HAS_FACILITY,
/*C.BLA_REF*/CASE WHEN C.BLA_REF IS NULL THEN 'NOT BLACKLISTED' ELSE  'BLACKLISTED' END IS_BLACKLISTED,
         C.DEL_DATE, 
         C.BIR_DATE, 
         C.NAT_NUM, 
         C.ID_TYPE, 
         C.ID_EXPIRY_DATE,
         C.OLD_CUS_NUM, 
/*DIARY_FLAG*/ CASE WHEN C.DIARY_FLAG = 0 THEN 'DIARY DOES NOT EXIST' WHEN C.DIARY_FLAG = 1 THEN 'DIARY EXISTS' END HAS_DIARY,
/*STO_PAY_IND*/ CASE WHEN C.STO_PAY_IND = 0 THEN 'NO STOP PAYMENT/RETURNED CHECKS' WHEN C.STO_PAY_IND = 1 THEN 'STOP PAYMENT/RETURNED CHECKS' END STOP_PAY_INDICATOR,
         C.NUM_OF_CHE_BOOK, 
         (select des_eng from text_tab b where   tab_id=205 and   C.CHE_BOOK_TYP_CODE =b.tab_ent ) CHE_BOOK_TYP ,
    C.LAS_CHE_BOOK_SNUM, 
    C.BIRTH_PLACE, 
    (select des_eng from text_tab b where   tab_id=10 and   C.COU_OF_RESI =b.tab_ent ) COU_OF_RESI ,
    (select des_eng from text_tab b where   tab_id=813 and   C.STATE =b.tab_ent ) STATE ,
    (select des_eng from text_tab b where   tab_id=814 and   C.PROVINCE =b.tab_ent ) PROVINCE ,
    (select des_eng from text_tab b where   tab_id=815 and   C.DISTRICT =b.tab_ent ) DISTRICT,
    C.TOWN TOWN, 
    C.REG_NUM, 
    C.CUST_MGR CUSTOMER_MANAGER, 
    C.PRE_CUST_MGR PREVIOUS_CUSTOMER_MANAGER, 
    C.DATE_MGR_ALLO DATE_OF_MANAGER_ALLOCATION, 
    C.CUS_AUTH_LIM, 
    C.CUS_USED_LIM, 
    C.BBAN_SEQ_NUM, 
    C.LAS_TRA_DATE, 
    C.UPD_TIME, 
    C.DCU_FLAG, 
    C.INFORMING_DATE,
    C.CUS_SEGMENT, 
    C.BIRTH_COU, 
    C.COU_OF_REGI 
FROM CUSTOMER C
LEFT JOIN BRANCH B ON  C.BRA_CODE = B.BRA_CODE
LEFT JOIN ADDRESS ADDR ON ADDR.BRA_CODE = C.BRA_CODE AND  ADDR.CUS_NUM = C.CUS_NUM;




-------------------------------------------------------------------------------------ANALYZING INTERPRETED CUSTOMER TABLE-------------------------------------------------------------------------------
SELECT DISTINCT CUS_CLASS, COUNT (CUS_CLASS)  FROM (SELECT DISTINCT CUSTOMER_NUMBER, CUS_CLASS FROM (
SELECT C.BRA_CODE BRANCH_NAME, 
            C.CUS_NUM CUSTOMER_NUMBER, 
            ADDR.CUR_CODE, 
           ADDR.LED_CODE, 
           ADDR.SUB_ACCT_CODE,
           C.CHE_DIG,
           (select DES_ENG from text_tab B where tab_id = 90  and   C.TIT_CODE =b.tab_ent ) TITLE ,
           ADDR.NAME_LINE1 CUSTOMER_NAME, 
/*C.LAN_IND*/ CASE WHEN C.LAN_IND = 1 THEN 'REFERENCE LANGUAGE'
                        WHEN C.LAN_IND = 2 THEN 'NATIONAL LANGUAGE' END LANGUAGE,            
           C.DATE_OPEN, 
           (select des_eng from text_tab b where   tab_id=40 and   C.RESI_CODE =b.tab_ent ) IS_RESIDENT ,
           (select des_eng from text_tab b where   tab_id=10 and   C.NATIONALITY =b.tab_ent ) NATIONALITY ,
           C.SOC_SEC_NUM, 
           (select des_eng from text_tab b where   tab_id=45 and   C.ECO_SEC =b.tab_ent ) ECO_SEC ,
           (select des_eng from text_tab b where   tab_id=55 and   C.CUS_CLASS =b.tab_ent ) CUS_CLASS ,
          (select des_eng from text_tab b where   tab_id=130 and   C.TYPE_OF_DEP =b.tab_ent ) TYPE_OF_DEP ,           
          C.AUT_AMT, 
          (select des_eng from text_tab b where   tab_id=1 and   C.AUT_LVL =b.tab_ent ) AUT_LVL ,
          C.NUM_OF_CARD_ISS NO_OF_CARD_ISSUED, 
/*C.FAC_FLAG*/ CASE WHEN C.FAC_FLAG = 0 THEN 'NO FACILITY'  WHEN C.FAC_FLAG = 1 THEN 'FACILITY' END HAS_FACILITY,
/*C.BLA_REF*/CASE WHEN C.BLA_REF IS NULL THEN 'NOT BLACKLISTED' ELSE  'BLACKLISTED' END IS_BLACKLISTED,
         C.DEL_DATE, 
         C.BIR_DATE, 
         C.NAT_NUM, 
         C.ID_TYPE, 
         C.ID_EXPIRY_DATE,
         C.OLD_CUS_NUM, 
/*DIARY_FLAG*/ CASE WHEN C.DIARY_FLAG = 0 THEN 'DIARY DOES NOT EXIST' WHEN C.DIARY_FLAG = 1 THEN 'DIARY EXISTS' END HAS_DIARY,
/*STO_PAY_IND*/ CASE WHEN C.STO_PAY_IND = 0 THEN 'NO STOP PAYMENT/RETURNED CHECKS' WHEN C.STO_PAY_IND = 1 THEN 'STOP PAYMENT/RETURNED CHECKS' END STOP_PAY_INDICATOR,
         C.NUM_OF_CHE_BOOK, 
         (select des_eng from text_tab b where   tab_id=205 and   C.CHE_BOOK_TYP_CODE =b.tab_ent ) CHE_BOOK_TYP ,
    C.LAS_CHE_BOOK_SNUM, 
    C.BIRTH_PLACE, 
    (select des_eng from text_tab b where   tab_id=10 and   C.COU_OF_RESI =b.tab_ent ) COU_OF_RESI ,
    (select des_eng from text_tab b where   tab_id=813 and   C.STATE =b.tab_ent ) STATE ,
    (select des_eng from text_tab b where   tab_id=814 and   C.PROVINCE =b.tab_ent ) PROVINCE ,
    (select des_eng from text_tab b where   tab_id=815 and   C.DISTRICT =b.tab_ent ) DISTRICT,
    C.TOWN TOWN, 
    C.REG_NUM, 
    C.CUST_MGR CUSTOMER_MANAGER, 
    C.PRE_CUST_MGR PREVIOUS_CUSTOMER_MANAGER, 
    C.DATE_MGR_ALLO DATE_OF_MANAGER_ALLOCATION, 
    C.CUS_AUTH_LIM, 
    C.CUS_USED_LIM, 
    C.BBAN_SEQ_NUM, 
    C.LAS_TRA_DATE, 
    C.UPD_TIME, 
    C.DCU_FLAG, 
    C.INFORMING_DATE,
    C.CUS_SEGMENT, 
    C.BIRTH_COU, 
    C.COU_OF_REGI 
FROM CUSTOMER C
LEFT JOIN BRANCH B ON  C.BRA_CODE = B.BRA_CODE
LEFT JOIN ADDRESS ADDR ON ADDR.BRA_CODE = C.BRA_CODE AND  ADDR.CUS_NUM = C.CUS_NUM
)
GROUP BY  CUSTOMER_NUMBER, NATIONALITY
)
GROUP BY CUS_CLASS
ORDER BY COUNT (CUS_CLASS) DESC
;


--------------------------------------------------------------ACCOUNT ACTIVITY
----ACCOUNT STATUS CHECK
SELECT STATUS, COUNT(STATUS) FROM 
(SELECT M.BRA_CODE, M.CUS_NUM, M.CUR_CODE, M.LED_CODE, M.SUB_ACCT_CODE, M.MAP_ACC_NO, ACC.DATE_OPEN, 
(SELECT DES_ENG FROM TEXT_TAB B WHERE TAB_ID = 5 AND ACC.STA_CODE = B.TAB_ENT ) STATUS
FROM MAP_ACCT M
JOIN ACCOUNT ACC
ON M.BRA_CODE = ACC.BRA_CODE AND M.CUS_NUM = ACC.CUS_NUM AND M.CUR_CODE = ACC.CUR_CODE AND M.LED_CODE = ACC.LED_CODE AND M.SUB_ACCT_CODE = ACC.SUB_ACCT_CODE)
WHERE DATE_OPEN <= '30-SEP-2021'
GROUP BY STATUS;

----ACCOUNT TYPE
SELECT ACCT_TYPE, COUNT(CUS_NUM) FROM 
(SELECT LED_CODE, CUS_NUM,
CASE WHEN LED_CODE = 1 OR  LED_CODE = 2 OR LED_CODE = 3 OR LED_CODE = 4 OR LED_CODE = 6 OR LED_CODE = 7 OR LED_CODE = 15 OR
LED_CODE = 16 OR LED_CODE = 17 OR LED_CODE = 18 OR LED_CODE = 19 OR LED_CODE = 20 THEN 'CURRENT ACCOUNTS'
WHEN LED_CODE = 41 OR LED_CODE = 42 OR LED_CODE = 101 OR LED_CODE = 102 OR LED_CODE = 104 OR LED_CODE = 105 OR LED_CODE = 107 OR LED_CODE = 109 OR 
LED_CODE = 110 OR LED_CODE = 111 OR LED_CODE = 112 OR LED_CODE = 152 OR LED_CODE = 164 OR LED_CODE = 343 OR LED_CODE = 345 THEN 'SAVINGS ACCOUNT'
ELSE 'TERM_DEPOSIT'
END AS ACCT_TYPE
FROM 
(SELECT M.BRA_CODE, M.CUS_NUM, M.CUR_CODE, M.LED_CODE, M.SUB_ACCT_CODE, M.MAP_ACC_NO, ACC.DATE_OPEN, 
(SELECT DES_ENG FROM TEXT_TAB B WHERE TAB_ID = 5 AND ACC.STA_CODE = B.TAB_ENT ) STATUS
FROM MAP_ACCT M
JOIN ACCOUNT ACC
ON M.BRA_CODE = ACC.BRA_CODE AND M.CUS_NUM = ACC.CUS_NUM AND M.CUR_CODE = ACC.CUR_CODE AND M.LED_CODE = ACC.LED_CODE AND M.SUB_ACCT_CODE = ACC.SUB_ACCT_CODE)
WHERE DATE_OPEN <= '30-SEP-2021'
)
GROUP BY ACCT_TYPE 
ORDER BY COUNT(CUS_NUM) DESC;


------BREAKING DOWN ACCOUNT TYPE BY STATUS
SELECT ACCT_TYPE, STATUS, COUNT(STATUS) FROM 
(SELECT LED_CODE, CUS_NUM, STATUS,
CASE WHEN LED_CODE = 1 OR  LED_CODE = 2 OR LED_CODE = 3 OR LED_CODE = 4 OR LED_CODE = 6 OR LED_CODE = 7 OR LED_CODE = 15 OR
LED_CODE = 16 OR LED_CODE = 17 OR LED_CODE = 18 OR LED_CODE = 19 OR LED_CODE = 20 THEN 'CURRENT ACCOUNTS'
WHEN LED_CODE = 41 OR LED_CODE = 42 OR LED_CODE = 101 OR LED_CODE = 102 OR LED_CODE = 104 OR LED_CODE = 105 OR LED_CODE = 107 OR LED_CODE = 109 OR 
LED_CODE = 110 OR LED_CODE = 111 OR LED_CODE = 112 OR LED_CODE = 152 OR LED_CODE = 164 OR LED_CODE = 343 OR LED_CODE = 345 THEN 'SAVINGS ACCOUNT'
ELSE 'TERM_DEPOSIT'
END AS ACCT_TYPE
FROM 
(SELECT M.BRA_CODE, M.CUS_NUM, M.CUR_CODE, M.LED_CODE, M.SUB_ACCT_CODE, M.MAP_ACC_NO, ACC.DATE_OPEN, 
(SELECT DES_ENG FROM TEXT_TAB B WHERE TAB_ID = 5 AND ACC.STA_CODE = B.TAB_ENT ) STATUS
FROM MAP_ACCT M
JOIN ACCOUNT ACC
ON M.BRA_CODE = ACC.BRA_CODE AND M.CUS_NUM = ACC.CUS_NUM AND M.CUR_CODE = ACC.CUR_CODE AND M.LED_CODE = ACC.LED_CODE AND M.SUB_ACCT_CODE = ACC.SUB_ACCT_CODE)
WHERE DATE_OPEN <= '19-OCT-2021'
)
GROUP BY ACCT_TYPE, STATUS 
ORDER BY ACCT_TYPE, STATUS, COUNT(CUS_NUM) DESC;



SELECT COUNT (DISTINCT CUS_NUM) FROM (SELECT CUS_NUM
FROM MAP_ACCT
INTERSECT
SELECT CUS_NUM
FROM CUSTOMER);  ---4640820





------------------------------------------------------------------------------------TRANSACTION TABLE-----------------------------------------------

SELECT 
    T.TRA_DATE TRANS_DATE, 
    B.DES_ENG BRANCH, 
    A.NAME_LINE1 CUSTOMER_NAME, 
    C.DES_ENG CURRENCY, 
    C_A.DES_ENG LEDGER, 
    T.SUB_ACCT_CODE, 
    /*T.EXT_INT_FLAG*/  CASE WHEN T.EXT_INT_FLAG = 0 THEN 'External Only' WHEN T.EXT_INT_FLAG = 1 THEN 'Internal and External' END TRANS_INDICATOR,
    /*T.DEP_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 20 AND T.DEP_CODE = TT.TAB_ENT) DEPARTMENT,
    /*DIS_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 11 AND T.DIS_CODE = TT.TAB_ENT) DIS_CODE , 
    T.TRA_AMT TRANS_AMT, 
    /*DEB_CRE_IND*/  CASE WHEN T.DEB_CRE_IND  = 1 THEN 'DEBIT' WHEN T.DEB_CRE_IND  = 2 THEN 'CREDIT' END TRANS_TYPE , 
    T.CRNT_BAL CURRENT_BAL, 
    /*EXPL_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 60 AND T.EXPL_CODE = TT.TAB_ENT) CHANNEL,
    T.ORIGT_BRA_CODE ORIGIN_BRANCH, 
    /*CITY_LOC_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 190 AND T.CITY_LOC_CODE = TT.TAB_ENT) CITY 
FROM TRANSACT T
JOIN BRANCH B
ON B.BRA_CODE = T.BRA_CODE
JOIN ADDRESS A
ON A.BRA_CODE = T.BRA_CODE AND  A.CUS_NUM = T.CUS_NUM AND  A.CUR_CODE  = T.CUR_CODE AND A.LED_CODE  = T.LED_CODE AND A.SUB_ACCT_CODE  = T.LED_CODE
JOIN CURRENCY C
ON C.CUR_CODE = T.CUR_CODE
JOIN CHRT_ACT C_A
ON C_A.LED_TYPE = T.LED_CODE;


---TOTAL TRANSACTION IN THE LAST 3MONTHS
SELECT TRANS_DATE, TRANS_TYPE, TRANS_AMT FROM 
(SELECT 
    T.TRA_DATE TRANS_DATE, 
    B.DES_ENG BRANCH, 
    A.NAME_LINE1 CUSTOMER_NAME, 
    C.DES_ENG CURRENCY, 
    C_A.DES_ENG LEDGER, 
    T.SUB_ACCT_CODE, 
    /*T.EXT_INT_FLAG*/  CASE WHEN T.EXT_INT_FLAG = 0 THEN 'External Only' WHEN T.EXT_INT_FLAG = 1 THEN 'Internal and External' END TRANS_INDICATOR,
    /*T.DEP_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 20 AND T.DEP_CODE = TT.TAB_ENT) DEPARTMENT,
    /*DIS_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 11 AND T.DIS_CODE = TT.TAB_ENT) DIS_CODE , 
    T.TRA_AMT TRANS_AMT, 
    /*DEB_CRE_IND*/  CASE WHEN T.DEB_CRE_IND  = 1 THEN 'DEBIT' WHEN T.DEB_CRE_IND  = 2 THEN 'CREDIT' END TRANS_TYPE , 
    T.CRNT_BAL CURRENT_BAL, 
    /*EXPL_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 60 AND T.EXPL_CODE = TT.TAB_ENT) CHANNEL,
    T.ORIGT_BRA_CODE ORIGIN_BRANCH, 
    /*CITY_LOC_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 190 AND T.CITY_LOC_CODE = TT.TAB_ENT) CITY 
FROM TRANSACT T
JOIN BRANCH B
ON B.BRA_CODE = T.BRA_CODE
JOIN ADDRESS A
ON A.BRA_CODE = T.BRA_CODE AND  A.CUS_NUM = T.CUS_NUM AND  A.CUR_CODE  = T.CUR_CODE AND A.LED_CODE  = T.LED_CODE AND A.SUB_ACCT_CODE  = T.LED_CODE
JOIN CURRENCY C
ON C.CUR_CODE = T.CUR_CODE
JOIN CHRT_ACT C_A
ON C_A.LED_TYPE = T.LED_CODE
)
WHERE TRANS_DATE >= '01-JUL-2021' ;


select /*+PARALLEL(30)*/distinct  DEB_CRE_IND , count( DEB_CRE_IND) from banksys.transact
where TRA_DATE = '13-OCT-2021'
group by   DEB_CRE_IND
order by count( DEB_CRE_IND) desc;


-----------------INTERPRETING TRANSACTION TABLE BASED ON STAGING SERVER TABLE
SELECT
    T.TRA_DATE TRANS_DATE,
    T.TRA_SEQ1 TRANS_SEQ1,
    T.TRA_SEQ2 TRANS_SEQ2,
    B.DES_ENG BRANCH,
    T.CUS_NUM CUSTOMER_NUMBER,
    A.NAME_LINE1 CUSTOMER_NAME,
    C.DES_ENG CURRENCY,
    C_A.DES_ENG LEDGER_CODE,
    T.SUB_ACCT_CODE,
    /*DIS_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 11 AND T.DIS_CODE = TT.TAB_ENT) DIS_CODE,
    T.TRA_AMT TRANS_AMT,
    /*DEB_CRE_IND*/  CASE WHEN T.DEB_CRE_IND  = 1 THEN 'DEBIT' WHEN T.DEB_CRE_IND  = 2 THEN 'CREDIT' END TRANS_TYPE ,
    T.CRNT_BAL CURRENT_BAL ,
    /*EXPL_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 60 AND T.EXPL_CODE = TT.TAB_ENT) CHANNEL,
    T.ORIGT_BRA_CODE ORIGIN_BRANCH,
    /*CITY_LOC_CODE*/ (SELECT DES_ENG FROM TEXT_TAB TT WHERE TAB_ID = 190 AND T.CITY_LOC_CODE = TT.TAB_ENT) CITY,
    REMARKS
FROM TRANSACT T
JOIN BRANCH B
ON B.BRA_CODE = T.BRA_CODE
JOIN ADDRESS A
ON A.BRA_CODE = T.BRA_CODE AND  A.CUS_NUM = T.CUS_NUM AND  A.CUR_CODE  = T.CUR_CODE AND A.LED_CODE  = T.LED_CODE AND A.SUB_ACCT_CODE  = T.LED_CODE
JOIN CURRENCY C
ON C.CUR_CODE = T.CUR_CODE
JOIN CHRT_ACT C_A
ON C_A.LED_TYPE = T.LED_CODE
;
